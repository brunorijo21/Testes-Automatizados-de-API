{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-26T17:15:02.443Z",
    "end": "2025-08-26T17:15:05.913Z",
    "duration": 3470,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d76af377-d03d-401b-ad3c-4494022b0ad5",
      "title": "",
      "fullFile": "cypress\\e2e\\test\\api\\positiveScenarios.cy.js",
      "file": "cypress\\e2e\\test\\api\\positiveScenarios.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "113a1e0d-1207-439c-a84e-ab3657e255de",
          "title": "Cenários Positivos da API RestFull",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST - Criar novo objeto dinâmico",
              "fullTitle": "Cenários Positivos da API RestFull POST - Criar novo objeto dinâmico",
              "timedOut": null,
              "duration": 638,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.allure().severity('critical');\ncy.allure().description(`\n## Cenário: Criar novo objeto dinâmico\n  Dado que o cliente deseja registrar um novo objeto na base de dados\\n  \n  Quando ele envia uma requisição POST com dados válidos gerados dinamicamente\\n  \n  Então a API deve retornar um status 200 (OK)\\n  \n  E incluir no corpo da resposta os dados enviados e o ID do novo objeto\\n\n`);\noriginalPayload = (0, _generador.generateValidPayload)();\ncy.createObject(originalPayload).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.name).to.eq(originalPayload.name);\n  createdId = response.body.id;\n});",
              "err": {},
              "uuid": "8cbb95e1-e363-41d7-b382-37a3b68307bc",
              "parentUUID": "113a1e0d-1207-439c-a84e-ab3657e255de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Buscar objeto criado",
              "fullTitle": "Cenários Positivos da API RestFull GET - Buscar objeto criado",
              "timedOut": null,
              "duration": 552,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.allure().severity('critical');\ncy.allure().description(`\n## Cenário: Buscar objeto criado\nDado que um objeto foi previamente criado via requisição POST\\n\nQuando o cliente envia uma requisição GET para buscar esse objeto pelo ID\\n\nEntão a API deve retornar status 200(OK)\\n\nE o corpo da resposta deve conter os dados corretos do objeto criado\\n\n`);\ncy.getObject(createdId).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.id).to.eq(createdId);\n  expect(response.body.name).to.eq(originalPayload.name);\n});",
              "err": {},
              "uuid": "4f9cc3a4-91c7-4c28-a4f6-e4eed9380659",
              "parentUUID": "113a1e0d-1207-439c-a84e-ab3657e255de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Atualizar objeto com novos dados",
              "fullTitle": "Cenários Positivos da API RestFull PUT - Atualizar objeto com novos dados",
              "timedOut": null,
              "duration": 560,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.allure().severity('critical');\ncy.allure().description(`\n   ## Cenário: Atualizar objeto com novos dados válidos\nDado que um objeto já foi criado na base de dados\\n\nQuando eu envio uma requisição PUT com novos dados\\n\nEntão a API deve retornar o status 200\\n\nE o corpo da resposta deve conter os dados atualizados\\n\n   `);\nupdatedPayload = (0, _generador.generateValidPayload)();\ncy.updateObject(createdId, updatedPayload).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.name).to.eq(updatedPayload.name);\n});",
              "err": {},
              "uuid": "0292f48f-972e-46c7-8de4-892ac598317c",
              "parentUUID": "113a1e0d-1207-439c-a84e-ab3657e255de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Remover objeto",
              "fullTitle": "Cenários Positivos da API RestFull DELETE - Remover objeto",
              "timedOut": null,
              "duration": 552,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.allure().severity('critical');\ncy.allure().description(`\n## Cenário: Remover objeto com sucesso\nDado que um objeto foi criado e está disponível na base\\n\nQuando eu envio uma requisição para o endpoint\"\\n\nEntão a API deve retornar o status 200\\n\nE o objeto não deve mais ser encontrado em consultas futuras\n`);\ncy.deleteObject(createdId).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "5aa4668d-9139-4456-988b-6f748a69111e",
              "parentUUID": "113a1e0d-1207-439c-a84e-ab3657e255de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Verificar que o objeto removido não existe",
              "fullTitle": "Cenários Positivos da API RestFull GET - Verificar que o objeto removido não existe",
              "timedOut": null,
              "duration": 598,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.allure().severity('normal');\ncy.allure().description(`\n## Cenário: Verificar que o objeto removido não existe\n\n  Dado que um objeto foi previamente criado e removido da base de dados\\n  \n  Quando o cliente envia uma requisição GET para o endpoint\\` \\n\n  Então a API deve retornar status **404 (Not Found)** \\n \n  E o corpo da resposta deve indicar que o objeto não foi encontrado\\n\n `);\ncy.getObjectFail(createdId).then(response => {\n  expect(response.status).to.eq(404);\n});",
              "err": {},
              "uuid": "fbb1d924-4f96-4b2a-bb56-6d159e1aff01",
              "parentUUID": "113a1e0d-1207-439c-a84e-ab3657e255de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8cbb95e1-e363-41d7-b382-37a3b68307bc",
            "4f9cc3a4-91c7-4c28-a4f6-e4eed9380659",
            "0292f48f-972e-46c7-8de4-892ac598317c",
            "5aa4668d-9139-4456-988b-6f748a69111e",
            "fbb1d924-4f96-4b2a-bb56-6d159e1aff01"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2900,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}