{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-26T15:24:44.763Z",
    "end": "2025-08-26T15:24:48.927Z",
    "duration": 4164,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e7c6e4f2-28cc-47cf-a398-543167273d29",
      "title": "",
      "fullFile": "cypress\\e2e\\test\\api\\negativeScenarios.cy.js",
      "file": "cypress\\e2e\\test\\api\\negativeScenarios.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0bfca5f2-6c83-474b-b5ba-1bc0ad3b5e47",
          "title": "Testes negativos dinâmicos da API RESTful",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST - Criar objeto com campos ausentes",
              "fullTitle": "Testes negativos dinâmicos da API RESTful POST - Criar objeto com campos ausentes",
              "timedOut": null,
              "duration": 1288,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.allure().story('Validação de campos obrigatórios');\ncy.allure().severity('critical');\ncy.allure().description(`\n  ## Cenário: Criar objeto com campos ausentes\n  ***Dado*** que o cliente deseja criar um novo objeto via API\\n\\n\n  ***Quando*** ele envia uma requisição POST com campos obrigatórios ausentes\\n\\n\n  ***Então*** a API deve retornar um erro 400 (Bad Request)\\n\\n\n  ***E*** informar quais campos estão faltando na resposta \\n\\n\n`);\nconst payload = (0, _generador.generateMissingFieldsPayload)();\ncy.request({\n  method: 'POST',\n  url: `${Cypress.config('baseUrl')}${Cypress.env('apiPath')}`,\n  body: payload,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('name', payload.name);\n});",
              "err": {},
              "uuid": "ca7af8c6-a586-40bd-98b1-5cac79825326",
              "parentUUID": "0bfca5f2-6c83-474b-b5ba-1bc0ad3b5e47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Buscar objeto com Id inexistente",
              "fullTitle": "Testes negativos dinâmicos da API RESTful GET - Buscar objeto com Id inexistente",
              "timedOut": null,
              "duration": 598,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.allure().severity('normal');\nconst id = (0, _generador.generateNonexistentId)();\ncy.getObjectFail(id).then(response => {\n  expect(response.status).to.eq(404);\n});",
              "err": {},
              "uuid": "dc388661-9474-4a47-bdcb-fcdfceacb25e",
              "parentUUID": "0bfca5f2-6c83-474b-b5ba-1bc0ad3b5e47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Buscar objeto com Id mal formatado",
              "fullTitle": "Testes negativos dinâmicos da API RESTful GET - Buscar objeto com Id mal formatado",
              "timedOut": null,
              "duration": 660,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.allure().severity('normal');\nconst id = (0, _generador.generateInvalidId)();\ncy.getObjectFail(id).then(response => {\n  expect(response.status).to.be.oneOf([400, 404]);\n});",
              "err": {},
              "uuid": "224a16fc-4e70-41fb-88b6-9a2ec28a9b4a",
              "parentUUID": "0bfca5f2-6c83-474b-b5ba-1bc0ad3b5e47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Atualizar objeto com Id inválido e payload válido",
              "fullTitle": "Testes negativos dinâmicos da API RESTful PUT - Atualizar objeto com Id inválido e payload válido",
              "timedOut": null,
              "duration": 658,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.allure().severity('normal');\nconst id = (0, _generador.generateInvalidId)();\nconst payload = (0, _generador.generateMissingFieldsPayload)();\ncy.request({\n  method: 'PUT',\n  url: `${Cypress.config('baseUrl')}${Cypress.env('apiPath')}/${id}`,\n  body: payload,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.be.oneOf([400, 404]);\n});",
              "err": {},
              "uuid": "979536fb-6e42-41cc-8433-92b9c844bcf7",
              "parentUUID": "0bfca5f2-6c83-474b-b5ba-1bc0ad3b5e47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Remover objeto com Id inválido",
              "fullTitle": "Testes negativos dinâmicos da API RESTful DELETE - Remover objeto com Id inválido",
              "timedOut": null,
              "duration": 586,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = (0, _generador.generateInvalidId)();\ncy.request({\n  method: 'DELETE',\n  url: `${Cypress.config('baseUrl')}${Cypress.env('apiPath')}/${id}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.be.oneOf([400, 404]);\n});",
              "err": {},
              "uuid": "ee29f53e-1b54-4363-80ad-ce35190c8a48",
              "parentUUID": "0bfca5f2-6c83-474b-b5ba-1bc0ad3b5e47",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ca7af8c6-a586-40bd-98b1-5cac79825326",
            "dc388661-9474-4a47-bdcb-fcdfceacb25e",
            "224a16fc-4e70-41fb-88b6-9a2ec28a9b4a",
            "979536fb-6e42-41cc-8433-92b9c844bcf7",
            "ee29f53e-1b54-4363-80ad-ce35190c8a48"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3790,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}